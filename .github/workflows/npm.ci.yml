name: npm CI

on:
  workflow_call:
    inputs:
      os:
        type: string
        default: ubuntu-latest
        required: false
      timeout:
        type: number
        default: 30
        required: false

      node-version:
        type: number
        default: 20
        required: false

      compile-pre:
        type: string
        required: false
      compile-post:
        type: string
        required: false

      rebuild-pre:
        type: string
        required: false
      rebuild:
        type: boolean
        default: false
        required: false
      rebuild-post:
        type: string
        required: false

      dependency-review-pre:
        type: string
        required: false
      dependency-review:
        type: boolean
        default: true
        required: false
      dependency-review-post:
        type: string
        required: false

      codeql-pre:
        type: string
        required: false
      codeql:
        type: boolean
        default: true
        required: false
      codeql-node-version:
        type: number
        default: 20
        required: false
      codeql-post:
        type: string
        required: false

      test-pre:
        type: string
        required: false
      test:
        type: boolean
        default: true
        required: false
      test-post:
        type: string
        required: false

    secrets:
      compile-pre:
        required: false
      compile-post:
        required: false
      rebuild-pre:
        required: false
      rebuild-post:
        required: false
      dependency-review-pre:
        required: false
      dependency-review-post:
        required: false
      codeql-pre:
        required: false
      codeql-post:
        required: false
      test-pre:
        required: false
      test-post:
        required: false

jobs:
  Compile:
    name: npm CI (Node ${{ matrix.node }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    strategy:
      matrix:
        node: ${{ fromJSON(format('[{0}]', inputs.node-version)) }}
      fail-fast: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          architecture: x64
          cache: npm
          node-version: ${{ matrix.node }}

      - name: Pre Compile
        run: ${{ inputs.compile-pre || secrets.compile-pre }}

      - name: Build
        run: npm i

      - name: Post Compile
        run: ${{ inputs.compile-post || secrets.compile-post }}

  Rebuild:
    name: npm rebuild (Node ${{ matrix.node }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    needs: Compile
    if: inputs.rebuild
    strategy:
      matrix:
        node: ${{ fromJSON(format('[{0}]', inputs.node-version)) }}
      fail-fast: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          architecture: x64
          node-version: ${{ matrix.node }}

      - name: Pre Compile
        run: ${{ inputs.compile-pre || secrets.compile-pre }}

      - name: Build
        run: npm i

      - name: Post Compile
        run: ${{ inputs.compile-post || secrets.compile-post }}

      - name: Pre Rebuild
        run: ${{ inputs.rebuild-pre || secrets.rebuild-pre }}

      - name: Rebuild
        run: npm run rebuild

      - name: Post Rebuild
        run: ${{ inputs.rebuild-post || secrets.rebuild-post }}

  Dependency-Review:
    name: Dependency Review
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    needs: Rebuild
    if: |
      always() && inputs.dependency-review &&
      github.event_name == 'pull_request' &&
      (needs.Compile.result == 'success') &&
      (needs.Rebuild.result == 'success' || needs.Rebuild.result == 'skipped') &&
      github.event.repository.private == false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Pre Dependency Review
        run: ${{ inputs.dependency-review-pre || secrets.dependency-review-pre }}

      - name: Dependency Review
        uses: actions/dependency-review-action@v3

      - name: Post Dependency Review
        run: ${{ inputs.dependency-review-post || secrets.dependency-review-post }}

  CodeQL:
    name: CodeQL (Node ${{ inputs.codeql-node-version }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    needs: Dependency-Review
    if: |
      always() && inputs.codeql &&
      (github.event_name == 'pull_request' || github.actor != 'dependabot[bot]') &&
      (needs.Compile.result == 'success') &&
      (needs.Rebuild.result == 'success' || needs.Rebuild.result == 'skipped') &&
      (needs.Dependency-Review.result == 'success' || needs.Dependency-Review.result == 'skipped') &&
      github.event.repository.private == false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-and-quality

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          architecture: x64
          cache: npm
          node-version: ${{ inputs.codeql-node-version }}

      - name: Pre Compile
        run: ${{ inputs.compile-pre || secrets.compile-pre }}

      - name: Build
        run: npm i

      - name: Post Compile
        run: ${{ inputs.compile-post || secrets.compile-post }}

      - name: Pre CodeQL
        run: ${{ inputs.codeql-pre || secrets.codeql-pre }}

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Post CodeQL
        run: ${{ inputs.codeql-post || secrets.codeql-post }}

  Test:
    name: npm test (Node ${{ matrix.node-version }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    needs: CodeQL
    if: |
      always() && inputs.test &&
      (needs.Compile.result == 'success') &&
      (needs.Rebuild.result == 'success' || needs.Rebuild.result == 'skipped') &&
      (needs.Dependency-Review.result == 'success' || needs.Dependency-Review.result == 'skipped') &&
      (needs.CodeQL.result == 'success' || needs.CodeQL.result == 'skipped')
    strategy:
      matrix:
        node: ${{ fromJSON(format('[{0}]', inputs.node-version)) }}
      fail-fast: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          architecture: x64
          cache: npm
          node-version: ${{ matrix.node }}

      - name: Pre Compile
        run: ${{ inputs.compile-pre || secrets.compile-pre }}

      - name: Build
        run: npm i

      - name: Post Compile
        run: ${{ inputs.compile-post || secrets.compile-post }}

      - name: Pre Rebuild
        run: ${{ inputs.rebuild-pre || secrets.rebuild-pre }}

      - name: Rebuild
        if: inputs.rebuild
        run: npm run rebuild

      - name: Post Rebuild
        run: ${{ inputs.rebuild-post || secrets.rebuild-post }}

      - name: Pre Test
        run: |
          ${{ inputs.test-pre || secrets.test-pre }}

      - name: Test
        run: npm test

      - name: Post Test
        run: |
          ${{ inputs.test-post || secrets.test-post }}