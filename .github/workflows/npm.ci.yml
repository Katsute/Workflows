name: npm CI

on:
  workflow_call:
    inputs:
      os:
        type: string
        default: ubuntu-latest
        required: false
        description: The operating system
      timeout:
        type: number
        default: 30
        required: false
        description: Job timeout in minutes
      node-version:
        type: string
        default: 14
        required: false
        description: The NodeJS version to use
      rebuild:
        type: boolean
        default: false
        required: false
        description: Run `npm run rebuild`
      codeql:
        type: boolean
        default: true
        description: Run CodeQL analysis
      codeql-node-version:
        type: number
        default: 14
        required: false
        description: The NodeJS version to use on CodeQL
      test:
        type: boolean
        default: true
        description: Run `npm test`

jobs:
  Compile:
    name: npm CI (NodeJS ${{ matrix.node }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    strategy:
      matrix:
        node: ${{ fromJSON(format('[{0}]', inputs.node-version)) }}
      fail-fast: false
    steps:
      - name: ðŸ“¤ Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: ðŸ“š Install npm
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
          cache: npm

      - name: âœ” Compile with npm
        run: |
          npm ci

  Rebuild:
    name: npm CI (NodeJS ${{ matrix.node }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    if: inputs.rebuild
    strategy:
      matrix:
        node: ${{ fromJSON(format('[{0}]', inputs.node-version)) }}
      fail-fast: false
    steps:
      - name: ðŸ“¤ Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: ðŸ“š Install npm
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
          cache: npm

      - name: âœ” Compile with npm
        run: |
          npm ci

      - name: ðŸ”„ Rebuild with Electron
        run: |
          npm run rebuild

  CodeQL:
    name: CodeQL (NodeJS ${{ matrix.node }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    needs: [Compile, Rebuild]
    if: inputs.codeql && (github.event_name == 'pull_request' || github.actor != 'dependabot[bot]')
    steps:
      - name: ðŸ“¤ Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: ðŸ“š Install CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript

      - name: ðŸ“š Install npm
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ inputs.codeql-node-version }}
          architecture: x64
          cache: npm

      - name: âœ” Compile with npm
        run:
          npm ci

      - name: âœ” Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  Test:
    name: npm Test (NodeJS ${{ matrix.node }})
    runs-on: ${{ inputs.os }}
    timeout-minutes: ${{ inputs.timeout }}
    needs: CodeQL
    if: |
      always() && inputs.test &&
      (needs.CodeQL.result == "success" ||
       needs.CodeQL.result == "skipped")
    strategy:
      matrix:
        node: ${{ fromJSON(format('[{0}]', inputs.node-version)) }}
      fail-fast: false
    steps:
      - name: ðŸ“¤ Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: ðŸ“š Install npm
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node }}
          architecture: x64
          cache: npm

      - name: âœ” Compile with npm
        run: |
          npm ci

      - name: âœ” Test with npm
        run: |
          npm test